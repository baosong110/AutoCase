git branch  //查询本地分支名
git branch -a //查询远程本地所有分支名
git branch -r //查询远程分支名
git checkout  分支名   //切换分支名
git checkout -d    //创建本地分支名

//推送本地创建分支到远程github 上
1，git checkout -d  分支名
2，git push  --set-upstream origin  分支名

 //删除本地分支
1,git checkout -r -d  分支名  2,  git push   origin  :分支名  //删除远程分支名

git merge 分支名； //合并代码到master


文本编辑工具vim
三种模式切换快捷键
命令模式     快捷键 ESC
输入模式     i或a
底线模式     ：

以下是在命令模式中常用的快捷操作：

操作	快捷键
光标左移	h
光标右移	l（小写L）
光标上移	k
光标下移	j
光标移动到下一个单词	w
光标移动到上一个单词	b
移动游标到第n行	nG
移动游标到第一行	gg
移动游标到最后一行	G
快速回到上一次光标所在位置	Ctrl+o
删除当前字符	x
删除前一个字符	X
删除整行	dd
删除一个单词	dw或daw
删除至行尾	d$或D
删除至行首	d^
删除到文档末尾	dG
删除至文档首部	d1G
删除n行	ndd
删除n个连续字符	nx
将光标所在位置字母变成大写或小写	~
复制游标所在的整行	yy（3yy表示复制3行）
粘贴至光标后（下）	p
粘贴至光标前（上）	P
剪切	dd
交换上下行	ddp
替换整行，即删除游标所在行并进入插入模式	cc
撤销一次或n次操作	u{n}
撤销当前行的所有修改	U
恢复撤销操作	Ctrl+r
整行将向右缩进	>>
整行将向左退回	<<
若档案没有更动，则不储存离开，若档案已经被更动过，则储存后离开	ZZ

底线命令模式
在命令模式下按:键就进入了底线命令模式，在底线命令模式中可以输入单个或多个字符的命令。

以下是底线命令模式中常用的快捷操作：

操作	命令
保存	:w
退出	:q
保存并退出	:wq（:wq!表示强制保存退出）
将文件另存为其他文件名	:w new_filename
显示行号	:set nu
取消行号	:set nonu
使本行内容居中	:ce
使本行文本靠右	:ri
使本行内容靠左	:le
向光标之下寻找一个名称为word的字符串	:/word
向光标之上寻找一个字符串名称为word的字符串	:?word
重复前一个搜寻的动作	:n
从第一行到最后一行寻找word1字符串，并将该字符串取代为word2	:1,$s/word1/word2/g或 :%s/word1/word2/g






文本文件查看命令
cat:
cat 命令用于查看内容较少的文本
cat [选项] [文件]
cat -n 文件名  显示行号
cat -b 文件名  显示行号，但是不对空白进行编号
cat -s 文件名  当遇到有连续两行以上的空白行，只显示一行的空白行
一,将一个自增序列写入test.txt文件中、
放法一
for i in $(seq 1 10); do echo $i >>test.txt;done .
方法二
seq 10 > test.txt





TestNG 介绍

1，比Junit涵盖功能更全面的测试框架
2，Junit更适合隔离性比较强的单元测试
3，TestNG更适合复杂的集成测试

Test NG 引用:
<dependencies>
    <dependencies>k
          <groupId>org.testng</groupId>
          <artifactId>testng</artifactId>
          <version>6.10</version>
    </dependencies>
</dependencies>